about	null
#above added newly: for this patient, for patient, for concept
#above added newly: from the location
#above newly added
#above newly added : how is not null in a single case out of 6
#added above newly
#added above newly
#added above newly
#added above newly
#added above newly
#added above newly
#added above newly
#added above newly
#added above newly
#added above newly
#added above newly
#added above newly
#added above newly
#added above newly been--> null or this one is good check
#added above newly: case(hours-10, during-8) its better to give such relation
#added above newly: given has only two occurance
# added above newly: "how many" and "many times" were there but due to overlap, removed removing the "many times" advmod(many-2, How-1), amod(times-3, many-2) head mismatch so cant keep all three together
#added above newly: it is giving compound in online but this parser gave nn
#added above newly not sure about the rule
#added above newly not sure about the rule
#added above newly: not sure about the rule.
#added above newly: there are in timeref/ in the timeref/ in the concept/in concept/in location
#added above newly "we know" 5 times and "we" 6 times (we started)
above(pobj:__measurement__)	greater_than
active	null
administered(acomp:__concept__)	lambda.concept
administered(dobj:__concept__)	lambda.concept
administered(nsubjpass:__concept__)	lambda.concept
administered(nsubj:__concept__)	lambda.concept
administered(nsubjpass:vaccine(nn:__concept__))	lambda.concept
__admission__	lambda.concept/null
__admission__(nn:__concept__)	lambda.concept
#after	after
amount	null
#amount(amod:large)	is_large
an	null
a	null
all	null
any	null/delta
anything	null
anytime	null
applied(nsubjpass:__concept__)	lambda.concept
#area(det:the)	location
are(advmod:how)	latest
area	location
are	delta/latest/null
assigned(nsubjpass:__concept__)	lambda.concept
be	null
become	null
#been(aux:has)	null
been(dobj:what, aux:have)	latest
been(advmod:how, advmod:low)	min
been(advmod:how, aux:has)	trend
been(prep:over(pobj:__measurement__))	greater_than
been	null
begin	null
begin(aux:did)	earliest
being	null
below(pobj:__measurement__)	less_than
best	max
by	null
calculated(nsubjpass:__concept__)	lambda.concept
#call	lambda.hascall
came	null
case	null
# check why not working
changing(advmod:how, aux:are)	trend
changing(advmod:how, aux:is)	trend
changing(advmod:how, aux:is, obl:__time_unit__)	trend
changing(prep:over(pobj:__time_unit__))	trend
checked(nsubjpass:__concept__)	lambda.concept
closed	is_healed
created(nsubjpass:__concept__)	lambda.concept
come	null/lambda.concept
comfortable	null
comfortably	null
completed(nsubjpass:__concept__)	lambda.concept
composition	null
count	count
__concept__(advmod:around)	lambda.concept
__concept__(advmod:on)	lambda.concept
__concept__(advmod:still)	lambda.concept
__concept__(amod:current)	lambda.concept
__concept__(amod:more)	lambda.concept
__concept__(amod:ongoing)	lambda.concept
__concept__(amod:overall)	lambda.concept
__concept__(amod:particular)	lambda.concept
__concept__(amod:regular)	lambda.concept
__concept__(auxpass:been)	lambda.concept
__concept__(cop:been)	lambda.concept
__concept__(det:a)	lambda.concept
__concept__(det:an)	lambda.concept
__concept__(det:any)	lambda.concept
__concept__	lambda.concept
__concept__(vmod:checked)	lambda.concept
__concept__(vmod:done)	lambda.concept
__concept__(vmod:calculated)	lambda.concept
__concept__(vmod:conducted)	lambda.concept
__concept__(vmod:performed)	lambda.concept
__concept__(rcmod:tested)	lambda.concept
confirmed	null
confirm	null
contain	null
continue	null
#contrast	is_positive
current	latest
date(compound:decision)	time
#date(nn:decision)	time
date	time
date(amod:starting)	time
day(compound:decision)	time
__time_unit__(amod:many(advmod:how))	duration
#day(nn:decision)	time
decision	null
decrease	is_decreasing
decreased	is_decreasing
decreasing	is_decreasing
delivered(nsubjpass:__concept__)	lambda.concept
description	null
details	null
detected	null
#det(time, what)	time
develop	null
diagnosed	null
diagnosis	null
did(aux:how)	latest
did	delta/null/latest
__discharge__	lambda.concept
do	delta/null
does(advmod:how)	latest
does(aux:how)	latest
#does	delta/latest/null
does	delta/null
doing	null
done(aux:have)	delta
done(nsubjpass:__concept__)	lambda.concept
done(advmod:__concept__)	lambda.concept
done(nsubjpass:test(nn:__concept__))	lambda.concept
dosage	dose
dose	dose
dose(amod:last, det:the)	latest
doses(amod:many(advmod:how))	count
drop(obl:__measurement__(case:below))	less_than
drop(prep:below(pobj:__measurement__))	less_than
dropped(aux:has)	is_decreasing
dropped(obl:__measurement__(case:below))	less_than
dropped(prep:below(pobj:__measurement__))	less_than
due(prep:to)	reason
duration	duration
during	null
early(advmod:how)	time
early	earliest
earliest	earliest
encountered	null
end	null
ended	null
employed(nsubjpass:__concept__)	lambda.concept
ever	null
exam	null
exceed(dobj:__measurement__)	greater_than
exceeded(dobj:__measurement__)	greater_than
exceeded(obj:__measurement__)	greater_than
exceed	greater_than
#fall(prep:below)	less_than
fall(obl:__measurement__(case:below))	less_than
fall(prep:below(pobj:__measurement__))	less_than
#family(amod:coming)	lambda.concept
#family	is_relative
far(advmod:so)	null
#family	lambda.concept
find	null
first	earliest
fluid	null
for	null
found	null
from	null
further	null
gain	is_increasing
gained	is_increasing
gaining	is_increasing
get	null
getting(xcomp:low)	is_decreasing
given(aux:has, auxpass:been)	delta
#given	null/is_positive
given	null
given(dobj:much(advmod:how))	dose
give	null
go	null
going	null
go(advmod:higher)	greater_than
go(advmod:higher, prep:than)	greater_than
go("compound:prt":up)	is_increasing
go(obl:__measurement__(case:above))	greater_than
go(obl:__measurement__(case:over))	greater_than
go(obl:__measurement__(case:below))	less_than
go(prep:below(pobj:__measurement__))	less_than
go(prep:over(pobj:__measurement__))	greater_than
go(prt:up)	is_increasing
going("compound:prt":up)	is_increasing
going(prt:up)	is_increasing
got(dobj:__concept__)	lambda.concept
gotten	null
gone	null
#goal	null
#greater(prep:than)	greater_than
greater(obl:__measurement__(case:than))	greater_than
greater(prep:than(pobj:__measurement__))	greater_than
#grow(advmod:ever)	positive
#grown	positive
had	null
had(aux:has)	delta/null
happen	null
happened	null
happening	null
has(aux:do)	delta
has	delta/null/latest
have(aux:did)	delta/null
have	delta/null
have(dep:does)	delta
having(dobj:__concept__)	lambda.concept
healed	is_healed/null
high(advmod:how)	max
highest	max
#high	is_high
history	null
how	null
immunized	null
include	null
increased	is_increasing
increasing	is_increasing
indication	reason
information	null
initial	earliest
initiated	null
in	null
inserted	null
instances	null
is(advmod:how)	latest/null
is(advmod:how, nsubj:varying)	trend
is	delta/null/latest
is(expl:there)	delta
#issue(amod:main)	is_primary
issued	null
issued(nsubjpass:__concept__)	lambda.concept
it	null
kind	null
know	null
last	latest/null
latest	latest
least	min
left	null
less(prep:than(pobj:__measurement__))	less_than
#level(compound:__concept__)	lambda.concept
level(nmod:__concept__)	lambda.concept
level(nn:__concept__)	lambda.concept
level(nn:goal)	null
level(prep:of(pobj:__concept__))	lambda.concept
levels(det:the, amod:__concept__)	lambda.concept
levels(compound:__concept__)	lambda.concept
levels(nn:__concept__)	lambda.concept
located(advmod:where)	location
location	location
#__location_ref__	location/at_location
long(advmod:how)	duration
losing	is_decreasing
lost	is_decreasing
low(advmod:how)	min
low(dep:getting)	is_decreasing
lowest	min
made(advmod:when)	time
made(nsubjpass:diagnosis)	null
#make	is_positive
#many(advmod:how)	count/sum
many(advmod:how)	count
material(nn:__concept__)	lambda.concept
maximum	max
me	null
measure	null
measured	null
measurement(nn:__concept__)	lambda.concept
measurement	null
__measurement__	null
medication(amod:__concept__)	lambda.concept
mg	dose
# mg/ml(amod:much(advmod:how))	dose
ml(amod:much(advmod:how))	dose
minimum	min
more	null
most	null
#much(advmod:how)	sum/latest/dose
much(advmod:how)	latest/dose
#much	null/is_large
much	null
#need modification
#need modification
#neurology	is_doctor
noted	null
notes	null
number(nmod:times(case:of))	count
number(prep:of(pobj:times))	count
#nsubj(what, time)	time
observed	null
of	null
#often(advmod:how)	count/frequency
often(advmod:how)	count
#ok	is_normal
old(advmod:how)	latest
on	null
onset	null
open	null
order	null
ordered	null
out	null
over	null
part	location
particular	null
particulars	null
pass(dobj:zone(amod:__measurement__))	greater_than
#pass	greater_than
past	null
__patient__(amod:new)	null
__patient__(case:for)	null
#__patient__(case:'s)	null
#__patient__(det:the)	null
#__patient__(det:this)	null
__patient__	null
performed(advmod:__concept__)	lambda.concept
performed(nsubjpass:__concept__)	lambda.concept
performed(nsubjpass:test(nn:__concept__))	lambda.concept
performed(nsubjpass:tests(nn:__concept__))	lambda.concept
perform(dobj:__concept__)	lambda.concept
plan	null
#positive	positive
#positive	positive/is_positive
__postoperative__	time_within
__preoperative__	time_within
#post	before/after
#__preoperative__	time_within/lambda.concept
prescribed	null
prescribed(dobj:much(advmod:how))	dose
prescription	null
present(nsubj:__concept__)	lambda.concept
previously	null
problem(prep:of(pobj:__concept__))	lambda.concept
#problems(amod:more)	is_problem
#produced	positive/is_positive
#produced	positive
#properly	is_normal
proposed	null
provided(prep:with(pobj:__concept__))	lambda.concept
provided(nsubjpass:__concept__)	lambda.concept
put(prep:in(pobj:__concept__))	lambda.concept
put(prep:on(pobj:__concept__))	lambda.concept
putting(nsubj:__patient__)	is_increasing
putting(prep:on)	is_increasing
reach	null
#reaction	is_response
reading	null
reason	reason
__readmission__	lambda.concept
received(dobj:__concept__)	lambda.concept
received	null
receive	null
recent	latest
recent(advmod:most)	latest
recently(advmod:most)	latest
recorded(nsubjpass:__concept__)	lambda.concept
#relatives	lambda.hasrelative
remove	null
#removing unused lexicons
report(nn:__concept__)	lambda.concept
reports	null
resolved	is_healed/null
#respond	is_treatment
#response(nmod:__concept__)	lambda.concept
response	null
result(compound:__concept__)	lambda.concept
result	null
results	null
resume	null
#returned	null
risen	is_increasing
sealed(prt:off)	is_healed
see	null
seen	null
series	null
#serious	is_serious
#serious	severe/null
#showed	null
should	null
showed	null
#show	null
show	null
#significant	is_significant
#since	after
since	null
#'s	null
#__staff__	null
#__staff__	null/staff
someone	null
start(aux:did)	earliest
started("aux:pass":was)	earliest
started(auxpass:was)	earliest
started(auxpass:were)	earliest
started(nmodtmod:day)	earliest
started	null
status	null
still	null
stopped(auxpass:was)	latest
stopped(auxpass:were)	latest
suffer	null
#summary(det:the)	summary
#summary	summary
suspected	null
suspect	null
#team	null
__temporal_ref__	time_within
take	null
take(aux:did, nsubj:it)	latest
take(dobj:much(advmod:how))	dose
taken	null
taking	null
test	null
test(prep:for(pobj:__concept__))	lambda.concept
tested(nsubjpass:__concept__)	lambda.concept
tested(prep:for(pobj:__concept__))	lambda.concept
testing(vmod:done(prep:for(pobj:__concept__)))	lambda.concept
tests(nn:__concept__)	lambda.concept
the	null
there	null
this	null
through	null
time(compound:decision)	time
#times(amod:many)	count
times	null
time	time/null
is(nsubj:time, advmod:when)	time
__time_unit__	time/lambda.concept
__time_unit__(prep:since)	duration
__time_unit__(det:which)	time
titrated	null
#tolerating	is_result
to	null
to(case:due)	reason
took	null
#total	sum/null
total	null
#treat	is_treatment
treated(prep:with(pobj:__concept__))	lambda.concept
trend	trend
trending	trend
type	null
undergo(dobj:__concept__)	lambda.concept
undergo(advmod:__concept__)	lambda.concept
underwent(dobj:__concept__)	lambda.concept
use(aux:did)	delta
used	null
using	null
vaccine(amod:__concept__)	lambda.concept
vaccine(nn:__concept__)	lambda.concept
vaccines(nn:__concept__)	lambda.concept
vaccinated(prep:against(pobj:__concept__))	lambda.concept
vaccinated(prep:for(pobj:__concept__))	lambda.concept
vaccinated	null
vaccination	null
value	null
values	null
varying	trend
varying(advmod:how, aux:is)	trend
varying(advmod:how, cop:is)	trend
varying(obl:__time_unit__(case:over))	trend
varying(prep:over(pobj:__time_unit__))	trend
visit	null
#volume(amod:total)	sum
#volume	sum
#ward	at_location
was(advmod:how)	latest/null
was(advmod:when)	time
was	delta/latest/null
was(expl:there)	delta
we	null
went(prep:above(pobj:__measurement__))	greater_than
were	null/delta
#what(cop:are)	latest/null
what(cop:is)	latest/null
what(cop:was)	latest/null
#what(cop:were)	latest/null
what	latest/null
what(nsubj:time)	time
what(dep:for)	reason
when	time
when(prep:since)	duration
where	location/null
whether	delta
who(cop:is)	latest
#who	latest/null
why	reason
with	null
with(pobj:__patient__)	null
written	null
yet	null
#zone	null
__measurement__(advmod:above)	greater_than
__measurement__(advmod:greater, advmod:than)	greater_than
__measurement__(advmod:less(fixed:than))	less_than
__measurement__(advmod:more(fixed:than))	greater_than
__measurement__(advmod:over)	greater_than
__measurement__(case:above)	greater_than
__measurement__(case:below)	less_than
__measurement__(quantmod:than(mwe:greater))	greater_than
__measurement__(quantmod:than(mwe:more))	greater_than
__measurement__(quantmod:than(mwe:less))	less_than
#negative	is_negative
-	null
#.	null
,	null
